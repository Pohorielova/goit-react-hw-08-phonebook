{"version":3,"file":"static/js/551.856cfe87.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/Form/Form.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/PhoneBook/PhoneBook.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Input = styled.input`\n  background-color: #ffffff;\n  /* border-radius: 6px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px; */\n  width: 300px;\n  padding: 10px;\n  outline: none;\n  border: none;\n\n  margin-bottom: 10px;\n`;\nexport const Label = styled.label`\n  font-weight: 700;\n  font-size: 20px;\n  margin-bottom: 10px;\n  color: white;\n`;\nexport const Btn = styled.button`\n  background-color: orange;\n  border: none;\n  /* border-radius: 6px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px; */\n\n  color: white;\n  font-weight: 700;\n  font-size: 20px;\n  padding: 10px;\n  width: 320px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n\n  cursor: pointer;\n  &:hover,\n  &:active {\n    background-color: #a3125f;\n  }\n`;\n\nexport const Container = styled.form`\n  display: flex;\n  flex-direction: column;\n  /* justify-content: center; */\n  /* align-items: center; */\n`;\n","import { useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Input, Label, Btn, Container } from './Form.styled';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from './../../redux/operations';\n\nexport default function Form({ onSubmitForm }) {\n  const [data, setData] = useState({ name: '', number: '' });\n  const dispatch = useDispatch();\n  const handelInputChange = e => {\n    const { value, name } = e.currentTarget;\n    setData(prev => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = data;\n    dispatch(addContact({ name, number }));\n    setData({ name: '', number: '' });\n  };\n\n  return (\n    <Container onSubmit={handleSubmit}>\n      <Label>Name</Label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handelInputChange}\n        value={data.name}\n      />\n\n      <Label>Number</Label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handelInputChange}\n        value={data.number}\n      />\n\n      <Btn type=\"submit\">Add contact</Btn>\n    </Container>\n  );\n}\nForm.propType = {\n  onSubmitForm: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  background-color: #a3125f;\n  border: none;\n  /* border-radius: 6px; */\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n\n  color: white;\n  font-weight: 700;\n  font-size: 15px;\n  padding: 10px;\n  margin-left: 15px;\n  cursor: pointer;\n  &:hover,\n  &:active {\n    background-color: orange;\n  }\n`;\nexport const ContactsEl = styled.li`\n  background-color: #5c0a4995;\n  color: white;\n  padding: 0px 15px 0px 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  /* flex-direction: column; */\n  width: 340px;\n  height: 60px;\n  font-weight: 500;\n  font-size: 18px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box } from '../Box';\nimport { Btn, ContactsEl } from './ContactList.styled';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <Box\n    as=\"ul\"\n    display=\"flex\"\n    flexWrap=\"wrap\"\n    justifyContent=\"center\"\n    alignContent=\"flex-start\"\n    ml={45}\n    gridGap={10}\n  >\n    {contacts.map(({ id, name, number }) => (\n      <ContactsEl key={id}>\n        {name}: {number}\n        <Btn type=\"button\" onClick={() => onDeleteContact(id)}>\n          Delete\n        </Btn>\n      </ContactsEl>\n    ))}\n  </Box>\n);\n\nexport default ContactList;\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  background-color: #ffffff;\n  /* border-radius: 6px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px; */\n  width: 300px;\n  padding: 10px;\n  outline: none;\n  border: none;\n  margin-top: 10px;\n`;\nexport const Label = styled.label`\n  font-weight: 700;\n  font-size: 20px;\n  color: white;\n`;\n","import { Box } from 'components/Box';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, Label } from './Filter.styled';\n\nconst Filter = ({ value, onChange }) => (\n  <Box as=\"div\" flexDirection=\"column\">\n    <Label htmlFor=\"\" >\n      Filter{' '}\n    </Label>\n    <Input type=\"text\" value={value} onChange={onChange} />\n  </Box>\n);\nexport default Filter;\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  changeFilterValue,\n  getLoad,\n  getError,\n  getFilter,\n  getItems,\n} from '../../redux/appSlice';\nimport { Box } from './../Box';\nimport shortid from 'shortid';\nimport Form from './../Form/Form';\nimport ContactList from './../ContactList/ContactList';\nimport Filter from './../Filter/Filter';\nimport { useEffect } from 'react';\n\n// import { addContact, fetchContacts, deleteContact } from './redux/operations';\nimport {\n  addContact,\n  fetchContacts,\n  deleteContact,\n} from './../../redux/operations';\n\nexport default function PhoneBook() {\n  const dispatch = useDispatch();\n  const items = useSelector(getItems);\n  const isLoading = useSelector(getLoad);\n  const error = useSelector(getError);\n  const filter = useSelector(getFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const addName = data => {\n    const contact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n\n    const contactName = [];\n\n    items.forEach(contact => items.push(contact.name));\n\n    contactName.includes(contact.name)\n      ? alert(`${contact.name} is already in contacts.`)\n      : dispatch(\n          addContact({\n            data,\n            ...contact,\n          })\n        );\n  };\n\n  const changeFilter = e => {\n    dispatch(changeFilterValue(e.currentTarget.value));\n  };\n\n  const removeContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const visibleContacts = items.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <Box as=\"div\" p={15}>\n      <Box as=\"h1\" color=\"white\" textAlign=\"center\">\n        PhoneBook:\n      </Box>\n      <Box as=\"div\" display=\"flex\" alignItems=\"center\">\n        <Box as=\"div\" display=\"flex\" flexDirection=\"column\" width={320}>\n          <Form onSubmitForm={addName} contacts={visibleContacts} />\n          <Filter value={filter} onChange={changeFilter} />\n        </Box>\n        {isLoading && !error && <b>Request in progress...</b>}\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={removeContact}\n        />\n      </Box>\n    </Box>\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["Input","styled","Label","Btn","Container","Form","onSubmitForm","useState","name","number","data","setData","dispatch","useDispatch","handelInputChange","e","currentTarget","value","prev","onSubmit","preventDefault","addContact","type","pattern","title","required","onChange","propType","PropTypes","contacts","id","ContactsEl","onDeleteContact","Box","as","display","flexWrap","justifyContent","alignContent","ml","gridGap","map","onClick","flexDirection","htmlFor","PhoneBook","items","useSelector","getItems","isLoading","getLoad","error","getError","filter","getFilter","useEffect","fetchContacts","visibleContacts","contact","toLowerCase","includes","p","color","textAlign","alignItems","width","shortid","forEach","push","alert","changeFilterValue","contactId","deleteContact","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","length","unique","split","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","splice","shuffle","get","characters","seed","lookup","index","counter","previousSeconds","generate","clusterWorkerId","str","seconds","Date","now","random","format","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","undefined","RegExp","replace","test","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","_seed_","mask","log","LN2","step"],"sourceRoot":""}